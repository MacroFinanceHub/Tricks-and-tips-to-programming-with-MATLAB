% 2520 is the smallest number that can be divided by each of the numbers 
%   from 1 to 10 without any remainder. Write a function called 
%   smallest_multiple that returns a uint64, the smallest positive number 
%   that is evenly divisible by all of the numbers from 1 to n where n is
%   a positive integer scalar and is the only input argument of the 
%   function. If the result would be greater than what can be represented 
%   as a uint64, the function returns 0.
%
% input: 

function [ lcm ] = smallest_multiple( n )

%check that n is a positive integer scalar
if ~isscalar(n) || n < 1 || n ~= floor(n)
    fprintf('Invalid input. Must be a positive integer scalar');
    return
end

maxval=intmax('uint64');

plist=primes(n);

for i=1:length(plist)
    powers(i)=1;
    while plist(i)^(powers(i)+1) <= n
        powers(i)=powers(i)+1;
    end
end
   
pplist=uint64(plist) .^uint64(powers) ;   

prod=uint64(1)
for i=1:length(pplist)
    prod=prod*pplist(i)
end

lcm=prod

if lcm >= maxval
    lcm=uint64(0);
    return
end

end
